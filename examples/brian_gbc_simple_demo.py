#!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import division, absolute_import, print_function

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

import brian
from brian import siemens

import cochlear_nucleus.brn as cn

def main():

    tmax = 50e-3                # second

    cn.set_fs(40e3)             # Hz

    # anf_trains are normally generated by something like
    # cochlea.run_zilany2009()
    anf_trains = pd.DataFrame([
        {'spikes': np.array([10e-3, 30e-3]), 'duration': tmax},
        {'spikes': np.array([20e-3, 40e-3]), 'duration': tmax},
    ])

    # Generate ANF and GBC groups
    anfs = cn.make_anf_group(anf_trains)
    gbcs = cn.make_gbc_group(10)

    # Connect ANFs and GBCs
    synapses = brian.Connection(
        anfs,
        gbcs,
        'ge_syn',
    )

    synapses.connect_random(
        anfs,
        gbcs,
        p=0.5,
        fixed=True,
        weight=1e-6*siemens
    )

    # Monitors for the GBCs
    spikes = brian.SpikeMonitor(gbcs)
    voltages = brian.StateMonitor(gbcs, 'vm', record=True)

    # Run the simulation
    cn.run(
        duration=tmax,
        objects=[anfs, gbcs, synapses, spikes, voltages]
    )

    # Present the results
    print(spikes.spikes)

    fig, ax = plt.subplots(2,1)

    plt.sca(ax[0])
    brian.raster_plot(spikes)

    plt.sca(ax[1])
    voltages.plot()
    plt.show()


if __name__ == "__main__":
    main()
